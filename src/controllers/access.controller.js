// const { apiKey } = require("../auth/checkAuth");
const AccessService = require("../services/access.service");
const express = require("express");
const KeyTokenService = require("../services/keytoken.service");

class AccessController {
  // ‚úÖ ƒêƒÉng nh·∫≠p t√†i kho·∫£n
  async login(req, res, next) {
    try {
      console.log(`[P]:: Login Request Received ::`, req.body);

      const { email, password } = req.body;

      console.log("check1: da o day",req.body);
      console.log("check1: da o day",email);
      // Ki·ªÉm tra th√¥ng tin ƒëƒÉng nh·∫≠p v·ªõi AccessService
      const result = await AccessService.login({ email, password });
      
      if (result.status === "error") {
        console.warn(`‚ö†Ô∏è Login Failed: ${result.message}`);
        return res.status(result.code).json(result);
      } else {
        console.log(`‚úÖ Login Successful for User: ${result.metadata.account.username}`);
        console.log(`üîë Access Token: ${result.metadata.tokens.accessToken}`);

        // Tr·∫£ v·ªÅ k·∫øt qu·∫£ th√†nh c√¥ng v√† chuy·ªÉn h∆∞·ªõng ng∆∞·ªùi d√πng
        return res.status(result.code).json({
          result,
          success: true,
          message: "ƒêƒÉng nh·∫≠p th√†nh c√¥ng",
          redirectUrl: '/v1/api/admin/dashboard' // Chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang dashboard sau khi ƒëƒÉng nh·∫≠p th√†nh c√¥ng
        });
      }
    } catch (error) {
      console.error(`‚ùå Server Error during Login:`, error.message);
      return next(error);
    }
  }

  // ‚úÖ ƒêƒÉng k√Ω t√†i kho·∫£n
  signUp = async (req, res) => {
    try {
      const result = await AccessService.signUp({ body: req.body });

      console.log("üì• K·∫øt qu·∫£ tr·∫£ v·ªÅ t·ª´ signUp:", result); // Log k·∫øt qu·∫£ t·ª´ service

      // Ki·ªÉm tra n·∫øu result b·ªã undefined ho·∫∑c kh√¥ng c√≥ code
      if (!result || !result.code) {
        return res
          .status(500)
          .json({ message: "Unexpected error occurred!", status: "error" });
      }

      return res.status(result.code).json(result);
    } catch (error) {
      console.error("‚ùå Error in signUp:", error);
      return res
        .status(500)
        .json({ message: "Internal Server Error", error: error.message });
    }
  };
  // ‚úÖ ƒêƒÉng k√Ω t√†i kho·∫£n nh√¢n vi√™n (ch·ªâ d√†nh cho Admin)
  signUpEmployee = async (req, res) => {
    try {
      const result = await AccessService.signUpEmployee({ body: req.body });

      console.log("üì• K·∫øt qu·∫£ tr·∫£ v·ªÅ t·ª´ signUp:", result); // Log k·∫øt qu·∫£ t·ª´ service

      // Ki·ªÉm tra n·∫øu result b·ªã undefined ho·∫∑c kh√¥ng c√≥ code
      if (!result || !result.code) {
        return res
          .status(500)
          .json({ message: "Unexpected error occurred!", status: "error" });
      }

      return res.status(result.code).json(result);
    } catch (error) {
      console.error("‚ùå Error in signUp:", error);
      return res
        .status(500)
        .json({ message: "Internal Server Error", error: error.message });
    }
  };
  logout = async (req, res) => {
    try {
      const userId = req.body.userId || req.headers["x-user-id"];
      if (!userId) {
        return res
          .status(400)
          .json({ message: "Bad Request: Missing user ID" });
      }

      await KeyTokenService.removeKeyToken(userId);
      userId;
      return res.status(200).json({ message: "Logout successful" });
    } catch (error) {
      console.error("‚ùå [LOGOUT ERROR]:", error);
      return res.status(500).json({ message: "Internal Server Error" });
    }
  };
}

module.exports = new AccessController();
